# .github/workflows/build_wheels.yml

name: Build and Release Wheels

# Run this workflow when you create a new release on GitHub
# on:
#   release:
#     types: [published]
on: push

permissions:
  contents: read

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # Define the operating systems to build on
        os: [ubuntu-latest, windows-latest, macos-13, macos-14]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU (for ARM builds on Linux)
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all

      - name: Build the wheels
        uses: pypa/cibuildwheel@v2.19
        env:
          # Skip all 32-bit (i686) builds
          CIBW_SKIP: "*-manylinux_i686"

      - name: Store wheels as a workflow artifact
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}
          path: ./wheelhouse/*.whl

  upload_to_pypi:
    name: Upload wheels to PyPI
    needs: [build_wheels] # This job runs only after all wheels are built
    runs-on: ubuntu-latest
    permissions:
      # IMPORTANT: this permission is mandatory for trusted publishing
      id-token: write

    # Dedicated environments with protections for publishing are strongly recommended.
    # For more information, see: https://docs.github.com/en/actions/deployment/targeting-different-environments/using-environments-for-deployment#deployment-protection-rules
    environment:
      name: pypi
      url: https://pypi.org/project/pyoptex/${{ github.event.release.name }}

    steps:
      - name: Download all wheel artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
          pattern: wheels-*
          merge-multiple: true # Merge artifacts from different OSs into one directory

      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
  #       with:
  #         packages-dir: dist/
